<template>
  <div
    @click="modalOpen = true"
    aria-label="open project modal"
    class="overflow-hidden group w-full hover:cursor-pointer bg-gray-50 dark:bg-slate-950 dark:text-white hover:drop-shadow-xl border dark:border-gray-950 hover:border-gray-400 dark:hover:border-gray-700 rounded-xl"
  >
    <img
      class="object-cover border-b"
      :src="projectImage"
      alt="A screenshot of the project in use"
    />
    <h3
      class="flex items-center justify-between gap-4 font-extrabold p-4 pb-1 after:content-['open_↗'] sm:after:content-[''] group-hover:after:content-['open_↗'] dark:after:text-white after:opacity-50 after:block after:font-normal after:text-black"
    >
      {{ projectName }}
    </h3>
    <div class="p-4 py-4 flex flex-wrap gap-1">
      <slot></slot>
    </div>
  </div>
  <div
    @click="modalOpen = false"
    v-if="modalOpen"
    class="backdrop-blur bg-black bg-opacity-10 grid place-items-center absolute top-0 left-0 w-full h-full"
  >
    <div
      @click.stop
      aria-modal="true"
      class="overflow-y-auto relative w-5/6 h-5/6 border max-w-xl dark:border-gray-700 bg-white dark:bg-slate-950 rounded-xl text-black dark:text-white"
    >
      <img
        class="w-full h-1/3 object-cover border-b"
        :src="projectImage"
        alt="A screenshot of the project in use"
      />
      <div class="p-4">
        <h3 class="font-extrabold text-4xl">{{ projectName }}</h3>
        <p>{{ projectDescription }}</p>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, watch } from "vue";

export type ProjectProps = {
  projectName: string;
  projectDescription: string;
  projectImage: string;
};
const props = defineProps<ProjectProps>();

const modalOpen = ref<boolean>(false);
const returnPosition = ref<number | null>(null);

watch(modalOpen, () => {
  const contentContainer: HTMLElement =
    document.querySelector("#content-container");

  if (modalOpen.value) {
    returnPosition.value = contentContainer.scrollTop;
    contentContainer.style.overflow = "hidden";
    contentContainer.scrollTo(0, 0);
  } else {
    contentContainer.style.overflow = null;
    contentContainer.scrollTo(0, returnPosition.value);
  }
});
</script>
